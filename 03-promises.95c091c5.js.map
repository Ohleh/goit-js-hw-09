{"version":3,"sources":["js/03-promises.js"],"names":["fer","inputDelay","document","querySelector","buttonSubmit","fff","el","preventDefault","firsDelay","target","delay","value","step","amount","setTimeout","createPromise","position","int","setInterval","promise","Promise","resolve","reject","shouldResolve","Math","random","clearInterval","then","console","log","catch","error","addEventListener"],"mappings":";AAAA,MAAMA,EAAM,CACVC,WAAYC,SAASC,cAAc,SAEnCC,aAAcF,SAASC,cAAc,WAIvC,SAASE,EAAIC,GACXA,EAAGC,iBAECC,IAAAA,EAAYF,EAAGG,OAAOC,MAAMC,MAC5BD,EAAQJ,EAAGG,OAAOG,KAAKD,MACvBE,EAASP,EAAGG,OAAOI,OAAOF,MAE9BG,WAAW,MASFC,SAAcC,EAAUN,GAEzBO,MAAAA,EAAMC,YAAY,KAChBC,MAAAA,EAAU,IAAIC,QAAQ,CAACC,EAASC,KAC9BC,MAAAA,EAAgBC,KAAKC,SAAW,IAEtCT,GAAY,IACIH,EACVU,EAEFF,yBAA+BL,QAAeN,OAG9CY,wBAA6BN,QAAeN,OAG9CgB,cAAcT,KAIlBE,EACGQ,KAAKhB,IACJiB,QAAQC,IAAIlB,KAEbmB,MAAMC,IACLH,QAAQC,IAAIE,MAGfrB,GAnCHK,CADiB,EACOL,IAIvBF,GAdLR,EAAIC,WAAW+B,iBAAiB,SAAU3B","file":"03-promises.95c091c5.js","sourceRoot":"../src","sourcesContent":["const fer = {\n  inputDelay: document.querySelector('.form'),\n  // inputDelay: document.querySelector('.form input[name=\"step\"]'),\n  buttonSubmit: document.querySelector('button'),\n};\n\nfer.inputDelay.addEventListener('submit', fff);\nfunction fff(el) {\n  el.preventDefault();\n\n  let firsDelay = el.target.delay.value;\n  let delay = el.target.step.value;\n  let amount = el.target.amount.value;\n\n  setTimeout(() => {\n    const position = 0;\n    createPromise(position, delay);\n    //\n    // console.log(delay, step, amount);\n    //\n  }, firsDelay);\n  //\n  //\n  function createPromise(position, delay) {\n    ///\n    const int = setInterval(() => {\n      const promise = new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.5;\n\n        position += 1;\n        if (position <= amount) {\n          if (shouldResolve) {\n            // Fulfill\n            resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          } else {\n            // Reject\n            reject(`❌ Rejected promise ${position} in ${delay}ms`);\n          }\n        } else {\n          clearInterval(int);\n        }\n      });\n      //\n      promise\n        .then(value => {\n          console.log(value);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      //\n    }, delay);\n  }\n}\n"]}